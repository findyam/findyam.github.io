<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[findyam's place]]></title>
  <link href="http://findyam.github.io/atom.xml" rel="self"/>
  <link href="http://findyam.github.io/"/>
  <updated>2015-08-14T17:50:03+08:00</updated>
  <id>http://findyam.github.io/</id>
  <author>
    <name><![CDATA[Brady Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS生成静态库]]></title>
    <link href="http://findyam.github.io/blog/2015/08/14/iossheng-cheng-jing-tai-ku-he-framework/"/>
    <updated>2015-08-14T10:55:21+08:00</updated>
    <id>http://findyam.github.io/blog/2015/08/14/iossheng-cheng-jing-tai-ku-he-framework</id>
    <content type="html"><![CDATA[<p>这篇主要是复习一下iOS生成静态库。</p>

<p>为什么写这个主要是因为项目中加入了一个只支持真机的静态库文件，导致模拟器不能用，前阶段很忙，把这个问题放到一边了，今天有时间就把这个问题搞了一下。</p>

<p>解决这个问题思路很简单，就是自己用那个静态库的头文件，自己实现一遍所有接口 <em>(其实就是每个接口里打个log)</em>，然后重新生成一个模拟器包，最后真机包和模拟器包合并生成新的包导入工程。</p>

<p>平时开发的时候会遇到蛮多的情况需要打包静态库，下面就简单回顾下静态库如何打包。</p>

<hr />

<p>静态库也就是我们平时看到的很多后缀为<em>.a</em>的文件，打包的目的就不多说了，直接开始了。</p>

<p>首先我们需要建一个StaticLibrary的工程</p>

<p><img src="http://findyam.github.io/images/iOSStaticLibary/create_project.png"></p>

<p>建好工程之后，就往里搞代码，这里就写的简单点</p>

<p><img src="http://findyam.github.io/images/iOSStaticLibary/code.png"></p>

<p>然后就开始运行了，这里有一点需要注意，在这里编译的话，需要选择是编译simulator还是device，编译的结果只能是模拟器或真机使用的。</p>

<p>编译成功后会看到</p>

<p><img src="http://findyam.github.io/images/iOSStaticLibary/build_completed.png"></p>

<p><em>在这里需要说一下，只有真机编译的时候才会看到Products文件夹下的.a文件变黑如果需要模拟器的包，可以先编译模拟器版的，再编译真机，这样可以直接右键点击.a文件show in finder 跳转到生成的文件夹目录</em></p>

<p>编译好之后右键点击Products 文件夹下的 .a 文件，show in finder 就跳到相应的目录了</p>

<p><img src="http://findyam.github.io/images/iOSStaticLibary/products_dir.png"></p>

<p>这里需要注意一点就是编译时要记得选择是release 还是debug。</p>

<p>好了，两种文件都生成了，接下来就是合并文件了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  lipo -create Release-iphoneos/libFYStaticLibraryDemo.a Release-iphonesimulator/libFYStaticLibraryDemo.a -output libFyStaticLibraryDemo.a
</span></code></pre></td></tr></table></div></figure>


<p>terminal 里执行一下，搞定。</p>

<hr />

<p>好吧，这样搞实在是麻烦，每次修改完代码，要做这么多事情，其实还是有更简单的方法</p>

<p><img src="http://findyam.github.io/images/iOSStaticLibary/new_target.png"></p>

<p>创建一个新的target</p>

<p><img src="http://findyam.github.io/images/iOSStaticLibary/aggregate.png"></p>

<p>project 选中当前的project</p>

<p><img src="http://findyam.github.io/images/iOSStaticLibary/name_target.png"></p>

<p>然后选中新建的target — Build Phases ，点击加号 New Run Script Phase</p>

<p><img src="http://findyam.github.io/images/iOSStaticLibary/add_run_script.png"></p>

<p>然后在RunScript 中添加如下代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># define output folder environment variable</span>
</span><span class='line'><span class="nv">UNIVERSAL_OUTPUTFOLDER</span><span class="o">=</span><span class="k">${</span><span class="nv">BUILD_DIR</span><span class="k">}</span>/<span class="k">${</span><span class="nv">CONFIGURATION</span><span class="k">}</span>-universal
</span><span class='line'>
</span><span class='line'><span class="c"># Step 1. Build Device and Simulator versions</span>
</span><span class='line'>xcodebuild -target FYStaticLibraryDemo <span class="nv">ONLY_ACTIVE_ARCH</span><span class="o">=</span>NO -configuration <span class="k">${</span><span class="nv">CONFIGURATION</span><span class="k">}</span> -sdk iphoneos  <span class="nv">BUILD_DIR</span><span class="o">=</span><span class="s2">&quot;${BUILD_DIR}&quot;</span> <span class="nv">BUILD_ROOT</span><span class="o">=</span><span class="s2">&quot;${BUILD_ROOT}&quot;</span>
</span><span class='line'>xcodebuild -target FYStaticLibraryDemo -configuration <span class="k">${</span><span class="nv">CONFIGURATION</span><span class="k">}</span> -sdk iphonesimulator -arch i386 <span class="nv">BUILD_DIR</span><span class="o">=</span><span class="s2">&quot;${BUILD_DIR}&quot;</span> <span class="nv">BUILD_ROOT</span><span class="o">=</span><span class="s2">&quot;${BUILD_ROOT}&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># make sure the output directory exists</span>
</span><span class='line'>mkdir -p <span class="s2">&quot;${UNIVERSAL_OUTPUTFOLDER}&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Step 2. Create universal binary file using lipo</span>
</span><span class='line'>lipo -create -output <span class="s2">&quot;${UNIVERSAL_OUTPUTFOLDER}/lib${PROJECT_NAME}.a&quot;</span> <span class="s2">&quot;${BUILD_DIR}/${CONFIGURATION}-iphoneos/lib${PROJECT_NAME}.a&quot;</span> <span class="s2">&quot;${BUILD_DIR}/${CONFIGURATION}-iphonesimulator/lib${PROJECT_NAME}.a&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Last touch. copy the header files. Just for convenience</span>
</span><span class='line'>cp -R <span class="s2">&quot;${BUILD_DIR}/${CONFIGURATION}-iphoneos/include&quot;</span> <span class="s2">&quot;${UNIVERSAL_OUTPUTFOLDER}/&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>记得把target 改掉。</p>

<p>好了，一切准备就绪，然后选中新建的aggregate target，点击run，然后在products 文件夹里就会看到最终版本了。</p>

<p><img src="http://findyam.github.io/images/iOSStaticLibary/final_result.png"></p>

<p>静态库打包就简单写到这里，写的不是很详细，以后遇到问题，还是会在这里更新。</p>

<hr />

<p>参考内容：</p>

<p><a href="http://www.cocoachina.com/industry/20131204/7468.html">http://www.cocoachina.com/industry/20131204/7468.html</a></p>

<p><a href="http://www.raywenderlich.com/41377/creating-a-static-library-in-ios-tutorial">http://www.raywenderlich.com/41377/creating-a-static-library-in-ios-tutorial</a></p>

<h3></h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Octopress]]></title>
    <link href="http://findyam.github.io/blog/2015/05/20/hello-octopress/"/>
    <updated>2015-05-20T16:23:21+08:00</updated>
    <id>http://findyam.github.io/blog/2015/05/20/hello-octopress</id>
    <content type="html"><![CDATA[<h1>Hello Octopress, I am coming!</h1>
]]></content>
  </entry>
  
</feed>
